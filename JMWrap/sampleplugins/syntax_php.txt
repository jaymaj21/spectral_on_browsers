

userproc syntaxPHP {} {
    set widget .t;
    set keywords {__halt_compiler  abstract  and  array  as  break  callable  case  catch  class  clone  const  continue  declare  default  die  do  echo  else  elseif  empty  enddeclare  endfor  endforeach  endif  endswitch  endwhile  eval  exit  extends  final  for  foreach  function  global  goto  if  implements  include  include_once  instanceof  insteadof  interface  isset  list  namespace  new  or  print  private  protected  public  require  require_once  return  static  switch  throw  trait  try  unset  use  var  while  xor __CLASS__  __DIR__  __FILE__  __FUNCTION__  __LINE__  __METHOD__  __NAMESPACE__  __TRAIT__ <?php ?>}

    $widget tag configure attention -background #5555ce
    ::ctext::enableComments $widget
    ctext::addHighlightClassForRegexp $widget numbers #3aa905  {[-+]?([0-9]+\.?[0-9]*|\.[0-9]+)([eE][-+]?[0-9]+)?}
    ctext::addHighlightClass $widget keyword red $keywords 
    ctext::addHighlightClassForSpecialChars $widget brackets #2b7d35 {[]{}()<>=+-*;^%$!}
    ctext::addHighlightClassForRegexp $widget strings blue {"([^"\\]*(\\.[^"\\]*)*)"|\'([^\'\\]*(\\.[^\'\\]*)*)\'}; 
    ctext::addHighlightClassForRegexp $widget singleLineComment #44616a {//.*$};
    ctext::addHighlightClassForRegexp $widget var green {\$(\w|:)*\M}
    ctext::addHighlightClassForRegexp $widget comment #44616a {;[:blank]*#.*$}
    ctext::addHighlightClassForRegexp $widget comment #44616a {^[:blank]*#.*$}
    ::ctext::comments $widget 

    .t highlight 1.0 end;
    update;
}


[getmenu].syntax add command -label "PHP" -command "syntaxPHP";

